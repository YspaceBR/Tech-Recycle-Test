<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <title>Minhas Coletas</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <style>
    /* ...seu CSS permanece igual... */
    .formulario-coleta {
      background-color: #f5f5f5;
      border-radius: 12px;
      padding: 12px;
    }
    .formulario-coleta strong {
      display: block;
      font-family: "Montserrat", sans-serif;
      font-weight: 600;
      color: #333;
      font-size: 18px;
    }
    .formulario-coleta .data-material {
      color: #04b700;
      font-weight: 500;
      font-family: "Montserrat", sans-serif;
      font-size: 15px;
      margin-top: 20px;
    }
    .nota {
      font-family: "SourceCodePro", sans-serif;
      font-weight: 500;
      font-size: 12px;
      color: gray;
      margin-bottom: 8px;
      padding: 0 5px;
    }
    .button-container {
      display: flex;
      gap: 12vh;
      margin-top: 10px;
    }
    .btn-cancelar {
      background-color: #ff3b3b;
      color: white;
      width: 180px;
      padding: 10px 0;
      font-weight: 600;
      font-family: "Montserrat", sans-serif;
      border: none;
      font-size: 15px;
      border-radius: 8px;
    }
    .btn-cancelar:hover {
      background-color: #cc2e2e;
    }
    .btn-reagendar {
      background-color: #28a745;
      color: white;
      border: 1px solid #04b700;
      width: 180px;
      font-family: "Montserrat", sans-serif;
      padding: 10px 0;
      font-weight: 600;
      font-size: 15px;
      border-radius: 8px;
    }
    .btn-reagendar:hover {
      background-color: #218838;
    }
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100vw;
      height: 100vh;
      overflow: hidden;
      background-color: rgba(0,0,0,0.4);
    }
    .modal-content {
      background-color: #fefefe;
      font-family: "Montserrat", sans-serif;
      font-weight: 500;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      padding: 20px;
      border-radius: 10px;
      width: 80%;
      max-width: 500px;
      overflow: visible;
      max-height: 90vh;
    }
    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }
    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
    }
    .modal-header {
      margin-bottom: 20px;
    }
    .modal-footer {
      margin-top: 20px;
      text-align: right;
    }
    .form-group {
      margin-bottom: 15px;
    }
    .form-control {
      width: 100%;
      padding: 12px;
      border: 1px solid #ccc;
      color: #333;
      font-family: "Montserrat", sans-serif;
      border-radius: 5px;
      margin-top: 10px;
      background-color: #f9f9f9;
      font-size: 14px;
      box-sizing: border-box;
    }
    .btn-success {
      background-color: #28a745;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .btn-success:hover {
      background-color: #218838;
    }
    .alert {
      padding: 10px;
      border-radius: 5px;
      margin-bottom: 15px;
    }
    .alert-success {
      background-color: #d5f4e6;
      color: #27ae60;
    }
    .alert-danger {
      background-color: #f8d7da;
      color: #c0392b;
    }
  </style>
</head>
<body>
  <a href="#" style="font-size: 20px;" class="btn-login" id="back-btn" onclick="voltarPagina()">&#x276E;</a>

  <!-- Título dinâmico com quantidade de agendamentos -->
  <h3 id="titulo-quantidade" style="margin-bottom: 15px; margin-left: 10px; font-weight: 600; display: none;">
    Você possui <span id="quantidade-agendamentos">0</span> agendamento<span id="plural-agendamento"></span>!
  </h3>

  <!-- Mensagem que fica acima do card -->
  <h3 id="mensagem-agendamento" style="font-size: 16px;font-weight: 600;margin-left: 10px; margin-top:2vh">Nenhuma coleta agendada</h3>

  <!-- Card com os dados -->
  <div class="formulario-coleta" id="info-agendamento" style="display: none;" data-id-coleta=""></div>

  <!-- Elementos abaixo do card -->
  <div id="info-extra" style="margin-bottom: 10px; padding: 10px"></div>

  <h3 style="margin-left: 10px; margin-top:20px; font-weight: 600;">Acesse o mapa para agendar<br>novas coletas a domicílio</h3>

  <div class="container-maps" style="margin-left: 10px;">
    <button class="pontos-maps" onclick="window.location.href='/mapa'">
      Ir para o mapa
    </button>
  </div>

<!-- Modal de Reagendamento -->
<div id="modal-reagendamento" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <span class="close" onclick="fecharModalReagendamento()">&times;</span>
      <div class="local-card">
        <h2 id="nome-local">Carregando...</h2>
      </div>
    </div>
    <div id="modal-alert"></div>
    <div class="form-group">
      <label for="nova-data">Selecione a nova data:</label>
      <input type="date" id="nova-data" class="form-control" min="">
    </div>
    <div class="form-group">
      <label for="novo-material">Quais materiais serão coletados?</label>
      <select id="novo-material" class="form-control" required>
        <option value="">Selecione uma opção</option>
        <option value="informatica">Informática</option>
        <option value="Eletro Eletronicos">Produtos Eletrônicos</option>
        <option value="Residuos Eletronicos">Resíduos Eletrônicos</option>
        <option value="Aparelhos Telefonicos">Aparelhos Telefônicos</option>
      </select>
    </div>
    <div class="form-group">
      <label for="novo-peso">Qual o peso aproximado da sua separação?</label>
      <select id="novo-peso" class="form-control" required>
        <option value="">Selecione uma opção</option>
        <option value="ate5">Até 5kg</option>
        <option value="5a10">De 5kg a 10kg</option>
        <option value="10a20">De 10kg a 20kg</option>
        <option value="mais20">Mais de 20kg</option>
      </select>
    </div>
    <div class="form-group">
      <label for="nova-observacao">Tem alguma observação?</label>
      <textarea id="nova-observacao" class="form-control" placeholder="Comente sobre seus itens, horários que estará disponível, etc."></textarea>
    </div>
    <div class="modal-footer">
      <button class="btn-success" onclick="confirmarReagendamento()">Confirmar</button>
    </div>
  </div>
</div>

<script>
  function logDebug(msg, obj) {
    if (window.console && console.log) {
      console.log(msg, obj || '');
    }
  }

  // ====== Para TESTE: definir pontoTemp se não existir ======
  if (!localStorage.getItem('pontoTemp')) {
    localStorage.setItem('pontoTemp', 'Tech-Recycle');
  }
  // Recupera ponto selecionado
  const pontoSelecionado = localStorage.getItem('pontoTemp') || '';

  async function buscarAgendamentoServidor() {
    try {
      const response = await fetch('/buscar-agendamento', {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' }
      });
      const data = await response.json();

      const cardContainer = document.getElementById('info-agendamento');
      const mensagem = document.getElementById('mensagem-agendamento');
      const extra = document.getElementById('info-extra');
      const tituloQuantidade = document.getElementById('titulo-quantidade');
      const quantidadeAgendamentos = document.getElementById('quantidade-agendamentos');
      const pluralAgendamento = document.getElementById('plural-agendamento');

      if (data.sucesso && data.agendamentos && data.agendamentos.length > 0) {
        mensagem.style.display = 'none';
        cardContainer.style.display = 'block';
        const quantidade = data.agendamentos.length;

        // Atualiza o título dinâmico
        tituloQuantidade.style.display = 'block';
        quantidadeAgendamentos.textContent = quantidade;
        pluralAgendamento.textContent = quantidade > 1 ? 's' : '';

        // Adiciona os cards
        let html = '';
        html += data.agendamentos.map(agendamento => {
          const local = escapeHTML(agendamento.local || 'Local não especificado');
          const material = escapeHTML(agendamento.material || 'Material não especificado');
          const dataFormatada = agendamento.dataExibicao || formatarDataExibicao(agendamento.data);
          return `
            <div class="formulario-coleta" data-id-coleta="${agendamento.idColeta}">
              <div><strong>${local}</strong></div>
              <div class="data-material">${dataFormatada} - ${material}</div>
              <div class="button-container">
                <button onclick="cancelarAgendamento(${agendamento.idColeta})" class="btn-cancelar">Cancelar coleta</button>
                <button onclick="abrirModalReagendamento(${agendamento.idColeta})" class="btn-reagendar">Reagendar</button>
              </div>
            </div>
          `;
        }).join('');

        cardContainer.innerHTML = html;
        extra.innerHTML = `<div class="nota">*Deixe seus resíduos recicláveis prontos para retirada e fique atento ao seu telefone.</div>`;
      } else {
        exibirNenhumAgendamento();
      }
    } catch (error) {
      console.error('Erro ao buscar agendamento do servidor:', error);
      exibirNenhumAgendamento();
    }
  }

  function verificarAgendamentoLocal() {
    try {
      const agendamentoStr = localStorage.getItem('agendamento');
      if (agendamentoStr) {
        const agendamento = JSON.parse(agendamentoStr);
        if (agendamento && (agendamento.local || agendamento.material)) {
          exibirAgendamento(agendamento);
          return;
        }
      }
      exibirNenhumAgendamento();
    } catch (e) {
      console.error('Erro ao verificar agendamento local:', e);
      exibirNenhumAgendamento();
    }
  }

  function exibirAgendamento(agendamento) {
    const card = document.getElementById('info-agendamento');
    const mensagem = document.getElementById('mensagem-agendamento');
    const extra = document.getElementById('info-extra');
    const tituloQuantidade = document.getElementById('titulo-quantidade');

    const local = escapeHTML(agendamento.local || 'Local não especificado');
    const material = escapeHTML(agendamento.material || 'Material não especificado');
    const dataFormatada = agendamento.dataExibicao || formatarDataExibicao(agendamento.data);

    mensagem.style.display = 'none';
    card.style.display = 'block';
    tituloQuantidade.style.display = 'block';
    document.getElementById('quantidade-agendamentos').textContent = '1';
    document.getElementById('plural-agendamento').textContent = '';

    card.innerHTML = `
      <div class="formulario-coleta" data-id-coleta="${agendamento.idColeta}">
        <div><strong>${local}</strong></div>
        <div class="data-material">${dataFormatada} - ${material}</div>
        <div class="button-container">
          <button onclick="cancelarAgendamento(${agendamento.idColeta})" class="btn-cancelar">Cancelar coleta</button>
          <button onclick="abrirModalReagendamento(${agendamento.idColeta})" class="btn-reagendar">Reagendar</button>
        </div>
      </div>
    `;
    extra.innerHTML = `<div class="nota">*Deixe seus resíduos recicláveis prontos para retirada e fique atento ao seu telefone.</div>`;
  }

  function exibirNenhumAgendamento() {
    const card = document.getElementById('info-agendamento');
    const mensagem = document.getElementById('mensagem-agendamento');
    const extra = document.getElementById('info-extra');
    const tituloQuantidade = document.getElementById('titulo-quantidade');

    mensagem.textContent = 'Nenhuma coleta agendada';
    mensagem.style.display = 'block';
    card.style.display = 'none';
    tituloQuantidade.style.display = 'none';
    extra.innerHTML = '';
  }

  function formatarDataExibicao(data) {
    if (!data) return 'Data não especificada';
    if (data.includes('-')) {
      const [ano, mes, dia] = data.split('-');
      return `${dia}/${mes}/${ano}`;
    }
    return data;
  }

  function cancelarAgendamento(idColeta) {
    if (!idColeta || isNaN(idColeta)) {
      alert('ID da coleta inválido.');
      return;
    }

    if (!confirm('Tem certeza que deseja cancelar esta coleta?')) return;

    const btnCancelar = document.querySelector(`.formulario-coleta[data-id-coleta="${idColeta}"] .btn-cancelar`);
    const textoOriginal = btnCancelar.textContent;
    btnCancelar.textContent = 'Cancelando...';
    btnCancelar.disabled = true;

    fetch('/cancelar-coleta', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ idColeta })
    })
      .then(res => res.json())
      .then(json => {
        if (json.sucesso) {
          localStorage.removeItem('agendamento');
          buscarAgendamentoServidor(); // Atualiza lista após cancelamento
        } else {
          alert('Erro ao cancelar: ' + (json.mensagem || 'Erro desconhecido'));
          btnCancelar.textContent = textoOriginal;
          btnCancelar.disabled = false;
        }
      })
      .catch(err => {
        console.error('Erro ao cancelar coleta:', err);
        alert('Erro ao cancelar. Tente novamente.');
        btnCancelar.textContent = textoOriginal;
        btnCancelar.disabled = false;
      });
  }

  let idReagendamentoAtual = null;

  function abrirModalReagendamento(idColeta) {
    idReagendamentoAtual = idColeta;

    // Busque os dados do agendamento selecionado
    const agendamento = Array.from(document.querySelectorAll('.formulario-coleta'))
      .map(card => {
        const dataMaterial = card.querySelector('.data-material')?.innerText || '';
        let [data, resto] = dataMaterial.split(' - ');
        let material = '';
        let peso = '';
        if (resto) {
          const match = resto.match(/^([^(]+)\s*(\(([^)]+)\))?/);
          material = match ? match[1].trim() : '';
          peso = match && match[3] ? match[3].trim() : '';
        }
        return {
          id: card.getAttribute('data-id-coleta'),
          local: card.querySelector('strong')?.innerText || '',
          material,
          peso,
          data: data || '',
          observacao: card.getAttribute('data-observacao') || ''
        };
      })
      .find(a => a.id == idColeta);

    // Atualiza o nome do local no modal
    document.getElementById('nome-local').innerText = agendamento?.local || pontoSelecionado;

    const modal = document.getElementById('modal-reagendamento');
    const inputData = document.getElementById('nova-data');
    const inputMaterial = document.getElementById('novo-material');
    const inputPeso = document.getElementById('novo-peso');
    const inputObs = document.getElementById('nova-observacao');

    const hoje = new Date();
    const ano = hoje.getFullYear();
    const mes = String(hoje.getMonth() + 1).padStart(2, '0');
    const dia = String(hoje.getDate()).padStart(2, '0');
    inputData.min = `${ano}-${mes}-${dia}`;
    inputData.value = '';

    inputMaterial.value = agendamento?.material || '';
    inputPeso.value = agendamento?.peso || '';
    inputObs.value = agendamento?.observacao || '';

    document.getElementById('modal-alert').innerHTML = '';
    modal.style.display = 'block';
  }

  function fecharModalReagendamento() {
    document.getElementById('modal-reagendamento').style.display = 'none';
  }

  function confirmarReagendamento() {
    const novaData = document.getElementById('nova-data').value;
    const novoMaterial = document.getElementById('novo-material').value;
    const novoPeso = document.getElementById('novo-peso').value;
    const novaObs = document.getElementById('nova-observacao').value;
    const alertDiv = document.getElementById('modal-alert');
    const btnConfirmar = document.querySelector('.btn-success');

    if (!novaData) {
      alertDiv.innerHTML = '<div class="alert alert-danger">Por favor, selecione uma data.</div>';
      return;
    }

    btnConfirmar.textContent = 'Reagendando...';
    btnConfirmar.disabled = true;

    fetch('/reagendar-coleta', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        idColeta: idReagendamentoAtual,
        novaData,
        material: novoMaterial,
        peso: novoPeso,
        observacao: novaObs
      })
    })
      .then(res => res.json())
      .then(data => {
        if (data.sucesso) {
          fecharModalReagendamento();
          buscarAgendamentoServidor();
        } else {
          alertDiv.innerHTML = `<div class="alert alert-danger">${data.mensagem || 'Erro ao reagendar'}</div>`;
          btnConfirmar.textContent = 'Confirmar';
          btnConfirmar.disabled = false;
        }
      })
      .catch(err => {
        console.error('Erro ao reagendar:', err);
        alertDiv.innerHTML = '<div class="alert alert-danger">Erro ao reagendar. Tente novamente.</div>';
        btnConfirmar.textContent = 'Confirmar';
        btnConfirmar.disabled = false;
      });
  }

  function voltarPagina() {
    window.location.href = document.referrer || '/';
  }

  function escapeHTML(str) {
    if (!str) return '';
    const div = document.createElement('div');
    div.appendChild(document.createTextNode(str));
    return div.innerHTML;
  }

  window.onclick = function(event) {
    const modal = document.getElementById('modal-reagendamento');
    if (event.target == modal) {
      modal.style.display = "none";
    }
  }

  document.addEventListener('DOMContentLoaded', function () {
    const urlParams = new URLSearchParams(window.location.search);
    const idColetaParam = urlParams.get('idColeta');

    if (idColetaParam) {
      let agendamentoLocal = {};
      try {
        const agendamentoStr = localStorage.getItem('agendamento');
        if (agendamentoStr) {
          agendamentoLocal = JSON.parse(agendamentoStr);
        }
      } catch (e) {
        logDebug('Erro ao parsear agendamento local:', e);
      }
      agendamentoLocal.idColeta = idColetaParam;
      localStorage.setItem('agendamento', JSON.stringify(agendamentoLocal));
    }

    verificarAgendamentoLocal();
    buscarAgendamentoServidor();
  });
</script>
</body>
</html>